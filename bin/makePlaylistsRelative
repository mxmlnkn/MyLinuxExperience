#!/bin/bash

paths=()
dryrun=0
dummyFlag=
while [ $# -gt 0 ]; do case "$1" in
    -h|--help)
        echo "Makes all entries inside a given .m3u playlist relative in respect to the location of the .m3u list itself. If a folder is given, then this is done for all .m3u lists found in that folder.

Usage: makePlayListsRelative <path to folder or .m3u>"
        exit 0
        ;;
    -d)
        dryrun=1
        dummyFlag='-d'
        ;;
    *)
        if [ ! -f "$1" ] && [ ! -d "$1" ]; then
            echo -e "\e[31m'$1' is neither a valid flag nor a file or folder path, ignoring it.\e[0m" 1>&2
        else
            paths+=( "$1" )
        fi
        shift
        ;;
esac; done

if [ "${#paths[@]}" -eq 0 ] && [ -n "$CAJA_SCRIPT_CURRENT_URI" ]; then
    path=${CAJA_SCRIPT_CURRENT_URI#file://}
    paths+=( "$( python -c "import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])" "$folder" )" )
fi

echo "${paths[@]}"

makeM3uRelative()
{
    local dummy=
    if [ "$1" == '-d' ]; then dummy='echo'; shift; fi
    local file=$1
    if [ ! -f "$file" ]; then return 1; fi
    local tmpFile=$( mktemp )
    # check for UTF-8 BOM
    if ! 'grep' -q $'^\xEF\xBB\xBF' -- "$file"; then
        printf "\xEF\xBB\xBF" > "$tmpFile"
    fi
    # absolute path to remove (without file://). As this is used inside sed
    # we need to escape regex characters
    local prefix=$( basename -- "$( cd -- "$( dirname -- "$file" )" && pwd )" )
    local prefixRegex=$( printf '%s' "$prefix" | sed -r 's|([][^$.*\])|\\\1|g' )
    echo "Remove Prefix : .*$prefix"
    echo "Prefix (Regex): .*$prefixRegex"
    # replace windows "\" to linux style "/"
    # replace "%20"-hexcodes to their respective ascii characters
    # (echo -e is to interprete \xnn codes)
    echo -e "$( sed "s|\\\\|\/|g;
                     s/%/\\\\x/g" "$file" )" |
        sed "s|.*$prefixRegex/||" >> "$tmpFile"
    # cat "$tmpFile"
    echo "dummy = '$dummy'"
    $dummy rm "$file"
    $dummy mv "$tmpFile" "$file"
}

export -f makeM3uRelative

for path in "${paths[@]}"; do
    if [ -n "$path" ]; then
        bash -c 'makeM3uRelative "$0"'" $dummyFlag" "$path"
        exit 0
    else
        FIND=( find "$path" -iname '*.m3u' )
        "${FIND[@]}" -print0 | pv -0lps $( "${FIND[@]}" | wc -l ) |
        xargs -0 -I {} -P 4 bash -c 'makeM3uRelative "$0"'" $dummyFlag" {} \;
    fi
done
